@page
@model IndexModel
@{
    ViewData["Title"] = "SmartLights";
}
@inject IConfiguration _config

<div id="map"></div>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script
    src="@(_config.GetSection("GoogleMaps")["APIKey"])"
    defer
></script>
<script type="text/javascript">
    var map;
    var circles = [];
    var trafficDataLocal;
    let url = "@(_config.GetSection("Backend")["URL"] + "/api/TrafficData/Last/10")"
    
    

    // Initialize and add the map
    function initMap() {
      // The map, centered at Uluru
      map = new google.maps.Map(document.getElementById("map"), {
        zoom: 18,
        center: { lat: -34.56521, lng: -58.4384375 },
      });
            
      //Adding traffic layer
      const trafficLayer = new google.maps.TrafficLayer();
      trafficLayer.setMap(map)

      


      $.getJSON( url, function( data ) {

        trafficDataLocal = data;
        
        for (let i = 0; i < circles.length; i++) {
            circles[i] = null;
            circles[i].setMap(map);
        }

        $.each( data, function( key, val ) {
            
            var color = "#00FF00";
            if(val.CarCountEW > 10 || val.CarCountWE > 10 || val.CarCountNS > 10 || val.CarCountSN > 10)
                color = "#FFFF00";
            if(val.CarCountEW > 20 || val.CarCountWE > 20 || val.CarCountNS > 20 || val.CarCountSN > 20)
                color = "#FF0000";

            circles.push(new google.maps.Circle({
                strokeColor: color,
                strokeOpacity: 0.5,
                strokeWeight: 0.5,
                fillColor: color,
                fillOpacity: 0.35,
                center: { lat: val.Latitude, lng: val.Longitude },
                radius: 10,
            }));
        });

        for (let i = 0; i < circles.length; i++) {
            circles[i].setMap(map);
          }
        
      });

      window.initMap = initMap;
    }

    $(function () {
        UpdateTrafficLights();
        setInterval(function () { UpdateTrafficLights() }, 1000);
        setInterval(function () { clearsCirclesInMap() }, 5000);
    });

    function clearsCirclesInMap() {
        //clear circles from map on each refresh
        for (let i = 0; i < circles.length; i++) {
            circles[i].setMap(null);
          }
        circles = [];
    };
    
    function UpdateTrafficLights() {

        $.getJSON( url, function( data ) {

            $.each( data, function( key, val ) {

                if (!trafficDataLocal.find(p => p.ID === val.ID)) {
                    var color = "#00FF00";
                    if(val.CarCountEW > 10 || val.CarCountWE > 10 || val.CarCountNS > 10 || val.CarCountSN > 10)
                        color = "#FFFF00";
                    if(val.CarCountEW > 20 || val.CarCountWE > 20 || val.CarCountNS > 20 || val.CarCountSN > 20)
                        color = "#FF0000";

                    var existing = circles.find(c => (c.center.lat.Scopes[0].e === val.Latitude && c.center.lng.Scopes[0].f === val.Longitude));
                    if (existing) {
                        circles.pop(existing);
                    }

                    circles.push(new google.maps.Circle({
                        strokeColor: color,
                        strokeOpacity: 0.5,
                        strokeWeight: 0.5,
                        fillColor: color,
                        fillOpacity: 0.35,
                        map,
                        center: { lat: val.Latitude, lng: val.Longitude },
                        radius: 10,
                    }));
                    trafficDataLocal[trafficDataLocal.length] = val;
                }            
            });
      });
    }
</script>